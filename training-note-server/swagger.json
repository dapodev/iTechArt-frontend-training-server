{
  "swagger": "2.0",
  "info": {
    "version": "1.0.4",
    "title": "iTechArt ReactJS training server",
    "description": "This NodeJS API was created to provide backend part for your ReactJS note application.",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "note-app-training-server.herokuapp.com",
  "basePath": "/",
  "schemes": ["https"],
  "consumes": ["application/json"],
  "produces": ["application/json"],

  "securityDefinitions": {
    "basicAuth": {
      "type": "basic"
    }
  },

  "security": {
    "basicAuth": []
  },

  "paths": {
    "/api/notes": {
      "get": {
        "tags": ["Notes"],
        "summary": "Get one page of notes from DB.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "Sequence number of the page of notes that we want to get from the server. Default value: 1",
            "type": "integer"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "description": "Part(or the whole title) of note title that you want to get notes by. This parameter is used to filter notes by their title",
            "type": "string"
          },
          {
            "name": "dateFrom",
            "in": "query",
            "required": false,
            "description": "A date value represented as a string. This parameter is used to filter note by creation date.",
            "type": "string"
          },
          {
            "name": "dateTo",
            "in": "query",
            "required": false,
            "description": "A date value represented as a string. This parameter is used to filter note by creation date.",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Note"
            }
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/commonDefinitions/CommonResponse400"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/commonDefinitions/UnauthorizedError"
            }
          }
        }
      },
      "post": {
        "tags": ["Notes"],
        "summary": "Add a new note to DB.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object that represents the note you want to add to database.",
            "type": "object",
            "schema": {
              "$ref": "#/definitions/Note"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Note"
            }
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/commonDefinitions/BodyContentError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/commonDefinitions/UnauthorizedError"
            }
          }
        }
      }
    },

    "/api/notes/{id}": {
      "put": {
        "tags": ["Notes"],
        "summary": "Update some note values using ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A note you want to update ID value.",
            "type": "integer"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object that represents the new valuse of the note you want yo update in database.",
            "type": "object",
            "schema": {
              "$ref": "#/commonDefinitions/UpdateNoteBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Note"
            }
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/commonDefinitions/BodyContentError"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/commonDefinitions/UnauthorizedError"
            }
          }
        }
      },
      "delete": {
        "tags": ["Notes"],
        "summary": "Delete particular note by ID.",
        "parameters": [
          {
            "name": "user",
            "in": "path",
            "required": true,
            "description": "User email.",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "The ID of the note you want to mark as deleted.",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/commonDefinitions/DeleteNoteResponseBody"
            }
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/commonDefinitions/CommonResponse400"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/commonDefinitions/UnauthorizedError"
            }
          }
        }
      }
    },

    "api/users/": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users list.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "$ref": "#/commonDefinitions/PostUserBody"
            }
          },
          "400": {
            "description": "Invalid Request"
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/commonDefinitions/UnauthorizedError"
            }
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Register a new user.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "An object that contains all the data about user.",
            "type": "object",
            "schema": {
              "$ref": "#/commonDefinitions/PostUserBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "$ref": "#/commonDefinitions/PostUserBody"
            }
          },
          "400": {
            "description": "Invalid Request",
            "schema": {
              "$ref": "#/commonDefinitions/AddUserBodyError"
            }
          }
        }
      }
    },

    "api/users/auth": {
      "get": {
        "tags": ["Authentification"],
        "summary": "Authentification attempt. Returns user info if auth sucessed or an error message otherwise.",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "$ref": "#/commonDefinitions/PostUserBody"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/commonDefinitions/UnauthorizedError"
            }
          }
        }
      }
    }
  },

  "definitions": {
    "Note": {
      "required": ["id", "title", "description", "createdAt"],
      "properties": {
        "id": {
          "type": "integer",
          "uniqueItems": true
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "User": {
      "required": [
        "email",
        "password",
        "firstName",
        "lastName",
        "birthday",
        "notes"
      ],
      "properties": {
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "birthday": {
          "type": "string"
        },
        "notes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          }
        }
      }
    }
  },
  "commonDefinitions": {
    "UpdateNoteBody": {
      "required": ["title", "description", "createdAt"],
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "BodyContentError": {
      "required": ["hasErrors"],
      "properties": {
        "hasErrors": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      }
    },
    "AddUserBodyError": {
      "requred": ["hasErrors"],
      "properties": {
        "hasErrors": {
          "type": "boolean"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "birthDay": {
          "type": "string"
        }
      }
    },
    "DeleteNoteResponseBody": {
      "required": ["success", "id"],
      "properties": {
        "success": {
          "type": "boolean"
        },
        "id": {
          "type": "integer"
        }
      }
    },
    "PostUserBody": {
      "required": ["email", "password", "firstName", "lastName", "birthday"],
      "properties": {
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "password": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "birthday": {
          "type": "string"
        }
      }
    },
    "CommonResponse400": {
      "type": "string",
      "example": "Could not convert provided data to particular data type"
    },
    "AuthBody": {
      "required": ["email", "password"],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "UnauthorizedError": {
      "type": "string",
      "example": "Authorization error: invalid credentials"
    }
  }
}
